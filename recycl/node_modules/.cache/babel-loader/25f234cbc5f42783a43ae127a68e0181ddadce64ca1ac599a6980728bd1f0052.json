{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\hackathon\\\\Hackathon_by_sayna_RecycLab\\\\recycl\\\\src\\\\pages\\\\Signaler.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = () => {\n  _s();\n  const [deviceId] = React.useState({});\n  const [devices, setDevices] = React.useState([]);\n  const handleDevices = React.useCallback(mediaDevices => setDevices(mediaDevices.filter(({\n    kind\n  }) => kind === \"videoinput\")), [setDevices]);\n  React.useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(handleDevices);\n  }, [handleDevices]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: devices.map((device, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        videoConstraints: {\n          deviceId: device.deviceId\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), device.label || `Device ${key + 1}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n_s(WebcamCapture, \"FGo5MtaBLODrsmnGYl8Zlz4Uot4=\");\n_c = WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","useRef","Webcam","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamCapture","_s","deviceId","useState","devices","setDevices","handleDevices","useCallback","mediaDevices","filter","kind","useEffect","navigator","enumerateDevices","then","children","map","device","key","audio","videoConstraints","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/hackathon/Hackathon_by_sayna_RecycLab/recycl/src/pages/Signaler.js"],"sourcesContent":["import React, { useRef } from 'react';\r\n\r\nimport Webcam from \"react-webcam\";\r\n\r\nconst WebcamCapture = () => {\r\n    const [deviceId] = React.useState({});\r\n    const [devices, setDevices] = React.useState([]);\r\n  \r\n    const handleDevices = React.useCallback(\r\n      mediaDevices =>\r\n        setDevices(mediaDevices.filter(({ kind }) => kind === \"videoinput\")),\r\n      [setDevices]\r\n    );\r\n  \r\n    React.useEffect(\r\n      () => {\r\n        navigator.mediaDevices.enumerateDevices().then(handleDevices);\r\n      },\r\n      [handleDevices]\r\n    );\r\n  \r\n    return (\r\n      <>\r\n        {devices.map((device, key) => (\r\n            <div>\r\n              <Webcam audio={false} videoConstraints={{ deviceId: device.deviceId }} />\r\n              {device.label || `Device ${key + 1}`}\r\n            </div>\r\n  \r\n          ))}\r\n      </>\r\n    );\r\n  };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAErC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMG,aAAa,GAAGb,KAAK,CAACc,WAAW,CACrCC,YAAY,IACVH,UAAU,CAACG,YAAY,CAACC,MAAM,CAAC,CAAC;IAAEC;EAAK,CAAC,KAAKA,IAAI,KAAK,YAAY,CAAC,CAAC,EACtE,CAACL,UAAU,CACb,CAAC;EAEDZ,KAAK,CAACkB,SAAS,CACb,MAAM;IACJC,SAAS,CAACJ,YAAY,CAACK,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAACR,aAAa,CAAC;EAC/D,CAAC,EACD,CAACA,aAAa,CAChB,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACGX,OAAO,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACrBrB,OAAA;MAAAkB,QAAA,gBACElB,OAAA,CAACF,MAAM;QAACwB,KAAK,EAAE,KAAM;QAACC,gBAAgB,EAAE;UAAElB,QAAQ,EAAEe,MAAM,CAACf;QAAS;MAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxEP,MAAM,CAACQ,KAAK,IAAI,UAAUP,GAAG,GAAG,CAAC,EAAE;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAEN;EAAC,gBACJ,CAAC;AAEP,CAAC;AAACvB,EAAA,CA5BED,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}