{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\hackathon\\\\Hackathon_by_sayna_RecycLab\\\\recycl\\\\src\\\\pages\\\\CodeGestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/codegestion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inscription() {\n  _s();\n  const [code, setCode] = useState('');\n  const handleInputChange = e => {\n    setCode(e.target.value);\n  };\n  const handleValidateClick = () => {\n    // Logique pour valider le code (gestionnaire)\n    alert(`Code soumis : ${code}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"compte-flot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"S'inscrire, c'est simple et rapide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Entrez votre Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"(gestionnaire)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"codeInput\",\n          placeholder: \"Votre code ici\",\n          value: code,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"validateButton\",\n          onClick: handleValidateClick,\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Inscription, \"DeMoM/F9TqKLFftGs/rnPbEsxbc=\");\n_c = Inscription;\nexport default Inscription;\nvar _c;\n$RefreshReg$(_c, \"Inscription\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Inscription","_s","code","setCode","handleInputChange","e","target","value","handleValidateClick","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/hackathon/Hackathon_by_sayna_RecycLab/recycl/src/pages/CodeGestion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport  '../styles/codegestion.css';\r\n\r\nfunction Inscription() {\r\n    const [code, setCode] = useState('');\r\n  \r\n    const handleInputChange = (e) => {\r\n      setCode(e.target.value);\r\n    };\r\n  \r\n    const handleValidateClick = () => {\r\n      // Logique pour valider le code (gestionnaire)\r\n      alert(`Code soumis : ${code}`);\r\n    };\r\n  \r\n    return (\r\n\r\n        <div className=\"compte-flot\">\r\n          <h1>S'inscrire, c'est simple et rapide</h1>\r\n  \r\n             <div className=\"form-container\">\r\n               <div className=\"code-box\">\r\n                 <h2>Entrez votre Code</h2>\r\n                  <h2>(gestionnaire)</h2>\r\n                   <input\r\n              type=\"text\"\r\n              id=\"codeInput\"\r\n              placeholder=\"Votre code ici\"\r\n              value={code}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n            <button id=\"validateButton\" onClick={handleValidateClick}>\r\n              Valider\r\n            </button>\r\n                </div>\r\n               </div>\r\n             </div>\r\n    );\r\n  }\r\n  \r\n  export default Inscription;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAC,KAAK,CAAC,iBAAiBP,IAAI,EAAE,CAAC;EAChC,CAAC;EAED,oBAEIH,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BZ,OAAA;MAAAY,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExChB,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BZ,OAAA;QAAKW,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBZ,OAAA;UAAAY,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBhB,OAAA;UAAAY,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBhB,OAAA;UACLiB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,WAAW;UACdC,WAAW,EAAC,gBAAgB;UAC5BX,KAAK,EAAEL,IAAK;UACZiB,QAAQ,EAAEf,iBAAkB;UAC5BgB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFhB,OAAA;UAAQkB,EAAE,EAAC,gBAAgB;UAACI,OAAO,EAAEb,mBAAoB;UAAAG,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB;AAACd,EAAA,CApCMD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAsClB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}